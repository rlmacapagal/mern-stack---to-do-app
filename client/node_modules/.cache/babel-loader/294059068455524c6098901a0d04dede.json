{"ast":null,"code":"import _classCallCheck from\"D:/New folder/todov1/todo-mern-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/New folder/todov1/todo-mern-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/New folder/todov1/todo-mern-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/New folder/todov1/todo-mern-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Tasks from\"./Tasks\";import{Paper,TextField}from\"@material-ui/core\";import{Checkbox,Button}from\"@material-ui/core\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Tasks){_inherits(App,_Tasks);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={tasks:[],currentTask:\"\"};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;var tasks=this.state.tasks;return/*#__PURE__*/_jsx(\"div\",{className:\"App flex\",children:/*#__PURE__*/_jsxs(Paper,{elevation:3,className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"heading\",children:\"TO-DO\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,className:\"flex\",style:{margin:\"15px 0\"},children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",size:\"small\",style:{width:\"78%\",margin:\"0 5px 0 0\"},value:this.state.currentTask,required:true,onChange:this.handleChange,placeholder:\"Add your tasks here...\"}),/*#__PURE__*/_jsx(Button,{style:{height:\"40px\"},color:\"primary\",variant:\"outlined\",type:\"submit\",children:\"Add task\"})]}),/*#__PURE__*/_jsx(\"div\",{children:tasks.map(function(task){return/*#__PURE__*/_jsxs(Paper,{className:\"flex task_container\",children:[/*#__PURE__*/_jsx(Checkbox,{checked:task.completed,onClick:function onClick(){return _this2.handleUpdate(task._id);},color:\"primary\"}),/*#__PURE__*/_jsx(\"div\",{className:task.completed?\"task line_through\":\"task\",children:task.task}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.handleDelete(task._id);},color:\"secondary\",children:\"delete\"})]},task._id);})})]})});}}]);return App;}(Tasks);export default App;","map":{"version":3,"sources":["D:/New folder/todov1/todo-mern-app/client/src/App.js"],"names":["React","Tasks","Paper","TextField","Checkbox","Button","App","state","tasks","currentTask","handleSubmit","margin","width","handleChange","height","map","task","completed","handleUpdate","_id","handleDelete"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,mBAAjC,CACA,OAASC,QAAT,CAAmBC,MAAnB,KAAiC,mBAAjC,CACA,MAAO,WAAP,C,2FAEMC,CAAAA,G,uSACFC,K,CAAQ,CAAEC,KAAK,CAAE,EAAT,CAAaC,WAAW,CAAE,EAA1B,C,qDACR,iBAAS,iBACL,GAAQD,CAAAA,KAAR,CAAkB,KAAKD,KAAvB,CAAQC,KAAR,CACA,mBACI,YAAK,SAAS,CAAC,UAAf,uBACI,MAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,SAAS,CAAC,WAA/B,wBACI,YAAK,SAAS,CAAC,SAAf,mBADJ,cAEI,cACI,QAAQ,CAAE,KAAKE,YADnB,CAEI,SAAS,CAAC,MAFd,CAGI,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAV,CAHX,wBAKI,KAAC,SAAD,EACI,OAAO,CAAC,UADZ,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAgBD,MAAM,CAAC,WAAvB,CAHX,CAII,KAAK,CAAE,KAAKJ,KAAL,CAAWE,WAJtB,CAKI,QAAQ,CAAE,IALd,CAMI,QAAQ,CAAE,KAAKI,YANnB,CAOI,WAAW,CAAC,wBAPhB,EALJ,cAcI,KAAC,MAAD,EACI,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAV,CADX,CAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAC,UAHZ,CAII,IAAI,CAAC,QAJT,sBAdJ,GAFJ,cAyBI,qBACKN,KAAK,CAACO,GAAN,CAAU,SAACC,IAAD,qBACP,MAAC,KAAD,EAEI,SAAS,CAAC,qBAFd,wBAII,KAAC,QAAD,EACI,OAAO,CAAEA,IAAI,CAACC,SADlB,CAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAAN,EAFb,CAGI,KAAK,CAAC,SAHV,EAJJ,cASI,YACI,SAAS,CACLH,IAAI,CAACC,SAAL,CACM,mBADN,CAEM,MAJd,UAOKD,IAAI,CAACA,IAPV,EATJ,cAkBI,KAAC,MAAD,EACI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACI,YAAL,CAAkBJ,IAAI,CAACG,GAAvB,CAAN,EADb,CAEI,KAAK,CAAC,WAFV,oBAlBJ,GACSH,IAAI,CAACG,GADd,CADO,EAAV,CADL,EAzBJ,GADJ,EADJ,CA2DH,C,iBA/DalB,K,EAkElB,cAAeK,CAAAA,GAAf","sourcesContent":["import React from \"react\";\r\nimport Tasks from \"./Tasks\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\nimport { Checkbox, Button } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Tasks {\r\n    state = { tasks: [], currentTask: \"\" };\r\n    render() {\r\n        const { tasks } = this.state;\r\n        return (\r\n            <div className=\"App flex\">\r\n                <Paper elevation={3} className=\"container\">\r\n                    <div className=\"heading\">TO-DO</div>\r\n                    <form\r\n                        onSubmit={this.handleSubmit}\r\n                        className=\"flex\"\r\n                        style={{ margin: \"15px 0\" }}\r\n                    >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            style={{ width: \"78%\", margin:\"0 5px 0 0\" }}\r\n                            value={this.state.currentTask}\r\n                            required={true}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Add your tasks here...\"\r\n                        />\r\n                        <Button\r\n                            style={{ height: \"40px\" }}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Add task\r\n                        </Button>\r\n                    </form>\r\n                    <div>\r\n                        {tasks.map((task) => (\r\n                            <Paper\r\n                                key={task._id}\r\n                                className=\"flex task_container\"\r\n                            >\r\n                                <Checkbox\r\n                                    checked={task.completed}\r\n                                    onClick={() => this.handleUpdate(task._id)}\r\n                                    color=\"primary\"\r\n                                />\r\n                                <div\r\n                                    className={\r\n                                        task.completed\r\n                                            ? \"task line_through\"\r\n                                            : \"task\"\r\n                                    }\r\n                                >\r\n                                    {task.task}\r\n                                </div>\r\n                                <Button\r\n                                    onClick={() => this.handleDelete(task._id)}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    delete\r\n                                </Button>\r\n                            </Paper>\r\n                        ))}\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}